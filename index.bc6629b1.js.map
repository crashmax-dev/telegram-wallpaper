{"mappings":"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","sources":["src/telegram-wallpaper.ts","src/index.ts"],"sourcesContent":["interface Positions {\n  x: number\n  y: number\n}\n\ninterface RgbColor {\n  r: number\n  g: number\n  b: number\n}\n\ninterface Options {\n  canvas: HTMLCanvasElement | null\n  fps?: number\n  animate?: boolean\n  scrollAnimate?: boolean\n}\n\nconst curve: number[] = [\n  0, 0.25, 0.50, 0.75, 1, 1.5, 2, 2.5, 3, 3.5, 4, 5, 6, 7, 8, 9, 10, 11, 12,\n  13, 14, 15, 16, 17, 18, 18.3, 18.6, 18.9, 19.2, 19.5, 19.8, 20.1, 20.4, 20.7,\n  21.0, 21.3, 21.6, 21.9, 22.2, 22.5, 22.8, 23.1, 23.4, 23.7, 24.0, 24.3, 24.6,\n  24.9, 25.2, 25.5, 25.8, 26.1, 26.3, 26.4, 26.5, 26.6, 26.7, 26.8, 26.9, 27\n]\n\nconst positions: Positions[] = [\n  { x: 0.80, y: 0.10 },\n  { x: 0.60, y: 0.20 },\n  { x: 0.35, y: 0.25 },\n  { x: 0.25, y: 0.60 },\n  { x: 0.20, y: 0.90 },\n  { x: 0.40, y: 0.80 },\n  { x: 0.65, y: 0.75 },\n  { x: 0.75, y: 0.40 }\n]\n\nexport class TelegramWallpaper {\n  private width = 50\n  private height = 50\n  private phase = 0\n  private tail = 0\n  private tails = 90\n  private scrolltails = 50\n  private timestamp = 100\n  private fps = 15\n  private frametime = 1000 / this.fps\n  private scrollDelta = 0\n  private scrollTicking = false\n  private frames: ImageData[] = []\n  private colors: RgbColor[] = []\n  private curve = curve\n  private positions = positions\n  private phases = positions.length\n  private interval: ReturnType<typeof setInterval> | null = null\n  private raf: ReturnType<typeof requestAnimationFrame> | null = null\n\n  private hc: HTMLCanvasElement\n  private hctx: CanvasRenderingContext2D\n  private canvas: HTMLCanvasElement\n  private ctx: CanvasRenderingContext2D\n\n  constructor({\n    canvas,\n    fps,\n    animate,\n    scrollAnimate\n  }: Options) {\n    if (canvas) {\n      this.init(canvas)\n\n      if (fps !== undefined && !isNaN(fps)) {\n        this.frametime = 1000 / fps\n      }\n\n      if (animate) {\n        this.animate(animate)\n      }\n\n      if (scrollAnimate) {\n        this.scrollAnimate(scrollAnimate)\n      }\n    }\n  }\n\n  private hexToRgb(hex: string): RgbColor | null {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : null\n  }\n\n  private getPositions(shift: number): Positions[] {\n    const positions = [...this.positions]\n    while (shift > 0) {\n      positions.push(positions.shift()!)\n      shift--\n    }\n\n    const result = []\n    for (let i = 0; i < positions.length; i += 2) {\n      result.push(positions[i])\n    }\n\n    return result\n  }\n\n  private curPosition(phase: number, tail: number): Positions[] {\n    tail %= this.tails\n    const pos = this.getPositions(phase % this.phases)\n\n    if (tail) {\n      const next_pos = this.getPositions(++phase % this.phases)\n      const d1x = (next_pos[0].x - pos[0].x) / this.tails\n      const d1y = (next_pos[0].y - pos[0].y) / this.tails\n      const d2x = (next_pos[1].x - pos[1].x) / this.tails\n      const d2y = (next_pos[1].y - pos[1].y) / this.tails\n      const d3x = (next_pos[2].x - pos[2].x) / this.tails\n      const d3y = (next_pos[2].y - pos[2].y) / this.tails\n      const d4x = (next_pos[3].x - pos[3].x) / this.tails\n      const d4y = (next_pos[3].y - pos[3].y) / this.tails\n\n      return [\n        {\n          x: pos[0].x + d1x * tail,\n          y: pos[0].y + d1y * tail\n        },\n        {\n          x: pos[1].x + d2x * tail,\n          y: pos[1].y + d2y * tail\n        },\n        {\n          x: pos[2].x + d3x * tail,\n          y: pos[2].y + d3y * tail\n        },\n        {\n          x: pos[3].x + d4x * tail,\n          y: pos[3].y + d4y * tail\n        }\n      ]\n    }\n\n    return pos\n  }\n\n  private changeTail(diff: number): void {\n    this.tail += diff\n\n    while (this.tail >= this.tails) {\n      this.tail -= this.tails\n      this.phase++\n\n      if (this.phase >= this.phases) {\n        this.phase -= this.phases\n      }\n    }\n\n    while (this.tail < 0) {\n      this.tail += this.tails\n      this.phase--\n\n      if (this.phase < 0) {\n        this.phase += this.phases\n      }\n    }\n  }\n\n  private onWheel(event: WheelEvent): void {\n    this.scrollDelta += event.deltaY\n\n    if (!this.scrollTicking) {\n      requestAnimationFrame(() => this.drawOnWheel())\n      this.scrollTicking = true\n    }\n  }\n\n  private drawOnWheel(): void {\n    let diff = this.scrollDelta / this.scrolltails\n    this.scrollDelta %= this.scrolltails\n\n    diff = diff > 0 ?\n      Math.floor(diff) :\n      Math.ceil(diff)\n\n    if (diff) {\n      this.changeTail(diff)\n      const curPos = this.curPosition(this.phase, this.tail)\n      this.drawGradient(curPos)\n    }\n\n    this.scrollTicking = false\n  }\n\n  private drawNextPositionAnimated(): void {\n    if (this.frames.length > 0) {\n      const id = this.frames.shift()!\n      this.drawImageData(id)\n    } else if (this.interval) {\n      clearInterval(this.interval)\n    }\n  }\n\n  private getGradientImageData(positions: Positions[]): ImageData {\n    const id = this.hctx.createImageData(this.width, this.height)\n    const pixels = id.data\n    let offset = 0\n\n    for (let y = 0; y < this.height; y++) {\n      const directPixelY = y / this.height\n      const centerDistanceY = directPixelY - 0.5\n      const centerDistanceY2 = centerDistanceY * centerDistanceY\n\n      for (let x = 0; x < this.width; x++) {\n        const directPixelX = x / this.width\n\n        const centerDistanceX = directPixelX - 0.5\n        const centerDistance = Math.sqrt(centerDistanceX * centerDistanceX + centerDistanceY2)\n\n        const swirlFactor = 0.35 * centerDistance\n        const theta = swirlFactor * swirlFactor * 0.8 * 8.0\n        const sinTheta = Math.sin(theta)\n        const cosTheta = Math.cos(theta)\n\n        const pixelX = Math.max(0.0, Math.min(1.0, 0.5 + centerDistanceX * cosTheta - centerDistanceY * sinTheta))\n        const pixelY = Math.max(0.0, Math.min(1.0, 0.5 + centerDistanceX * sinTheta + centerDistanceY * cosTheta))\n\n        let distanceSum = 0.0\n\n        let r = 0.0\n        let g = 0.0\n        let b = 0.0\n\n        for (let i = 0; i < this.colors.length; i++) {\n          const colorX = positions[i].x\n          const colorY = positions[i].y\n\n          const distanceX = pixelX - colorX\n          const distanceY = pixelY - colorY\n\n          let distance = Math.max(0.0, 0.9 - Math.sqrt(distanceX * distanceX + distanceY * distanceY))\n          distance = distance * distance * distance * distance\n          distanceSum += distance\n\n          r += distance * this.colors[i].r / 255\n          g += distance * this.colors[i].g / 255\n          b += distance * this.colors[i].b / 255\n        }\n\n        pixels[offset++] = r / distanceSum * 255.0\n        pixels[offset++] = g / distanceSum * 255.0\n        pixels[offset++] = b / distanceSum * 255.0\n        pixels[offset++] = 0xFF\n      }\n    }\n\n    return id\n  }\n\n  private drawImageData(id: ImageData): void {\n    this.hctx.putImageData(id, 0, 0)\n    this.ctx.drawImage(this.hc, 0, 0, 50, 50)\n  }\n\n  private drawGradient(pos: Positions[]): void {\n    this.drawImageData(this.getGradientImageData(pos))\n  }\n\n  private doAnimate(): void {\n    const now = +Date.now()\n\n    if (!document.hasFocus() || now - this.timestamp < this.frametime) {\n      this.raf = requestAnimationFrame(() => this.doAnimate())\n      return\n    }\n\n    this.timestamp = now\n    this.changeTail(1)\n\n    const cur_pos = this.curPosition(this.phase, this.tail)\n    this.drawGradient(cur_pos)\n\n    this.raf = requestAnimationFrame(() => this.doAnimate())\n  }\n\n  private init(canvas: HTMLCanvasElement): void {\n    let colors: string | string[] = (canvas.getAttribute('data-colors') || '')\n\n    if (colors) {\n      colors = colors.split(',')\n    }\n\n    for (let i = 0; i < colors.length; i++) {\n      const color = this.hexToRgb(colors[i])\n\n      if (color) {\n        this.colors.push(color)\n      }\n    }\n\n    if (!this.hc) {\n      this.hc = document.createElement('canvas')\n      this.hc.width = this.width\n      this.hc.height = this.height\n      this.hctx = this.hc.getContext('2d')!\n    }\n\n    this.canvas = canvas\n    this.ctx = this.canvas.getContext('2d')!\n    this.update()\n  }\n\n  update(): void {\n    const pos = this.curPosition(this.phase, this.tail)\n    this.drawGradient(pos)\n  }\n\n  toNextPosition(): void {\n    if (!this.interval) {\n      return\n    }\n\n    clearInterval(this.interval)\n    this.frames = []\n\n    const prev_pos = this.getPositions(this.phase % this.phases)\n    this.phase++\n    const pos = this.getPositions(this.phase % this.phases)\n\n    const h = 27\n    const d1x = (pos[0].x - prev_pos[0].x) / h\n    const d1y = (pos[0].y - prev_pos[0].y) / h\n    const d2x = (pos[1].x - prev_pos[1].x) / h\n    const d2y = (pos[1].y - prev_pos[1].y) / h\n    const d3x = (pos[2].x - prev_pos[2].x) / h\n    const d3y = (pos[2].y - prev_pos[2].y) / h\n    const d4x = (pos[3].x - prev_pos[3].x) / h\n    const d4y = (pos[3].y - prev_pos[3].y) / h\n\n    for (let frame = 0; frame < 60; frame++) {\n      const cur_pos: Positions[] = [\n        {\n          x: prev_pos[0].x + d1x * this.curve[frame],\n          y: prev_pos[0].y + d1y * this.curve[frame]\n        },\n        {\n          x: prev_pos[1].x + d2x * this.curve[frame],\n          y: prev_pos[1].y + d2y * this.curve[frame]\n        },\n        {\n          x: prev_pos[2].x + d3x * this.curve[frame],\n          y: prev_pos[2].y + d3y * this.curve[frame]\n        },\n        {\n          x: prev_pos[3].x + d4x * this.curve[frame],\n          y: prev_pos[3].y + d4y * this.curve[frame]\n        }\n      ]\n\n      this.frames.push(this.getGradientImageData(cur_pos))\n    }\n\n    this.interval = setInterval(() => {\n      this.drawNextPositionAnimated()\n    }, 1000 / 30)\n  }\n\n  animate(start: boolean): void {\n    if (!start && this.raf) {\n      return cancelAnimationFrame(this.raf)\n    }\n\n    this.doAnimate()\n  }\n\n  scrollAnimate(start: boolean): void {\n    if (start) {\n      document.onwheel = (event) => this.onWheel(event)\n    } else {\n      document.onwheel = null\n    }\n  }\n}\n","import { TelegramWallpaper } from './telegram-wallpaper'\n\nconst wallpaper = new TelegramWallpaper({\n  canvas: document.querySelector('canvas'),\n  fps: 60,\n  animate: true,\n  scrollAnimate: true\n})\n\nconsole.log(wallpaper)\n"],"names":["$d5b54a10567db1c4$var$curve","$d5b54a10567db1c4$var$positions","x","y","$b4e14b6b8da86996$var$wallpaper","canvas","fps","animate","scrollAnimate","this","width","height","phase","tail","tails","scrolltails","timestamp","frametime","scrollDelta","scrollTicking","frames","colors","curve","positions","phases","length","interval","raf","init","undefined","isNaN","hexToRgb","hex","result","exec","r","parseInt","g","b","getPositions","shift","push","i","curPosition","pos","next_pos","d1x","d1y","d2x","d2y","d3x","d3y","d4x","d4y","changeTail","diff","onWheel","event","deltaY","requestAnimationFrame","drawOnWheel","Math","floor","ceil","curPos","drawGradient","drawNextPositionAnimated","id","drawImageData","clearInterval","getGradientImageData","hctx","createImageData","pixels","data","offset","centerDistanceY","centerDistanceY2","centerDistanceX","swirlFactor","sqrt","theta","sinTheta","sin","cosTheta","cos","pixelX","max","min","pixelY","distanceSum","distanceX","distanceY","distance","putImageData","ctx","drawImage","hc","doAnimate","now","Date","document","hasFocus","cur_pos","getAttribute","split","color","createElement","getContext","update","toNextPosition","prev_pos","h","frame","setInterval","start","cancelAnimationFrame","onwheel","querySelector","console","log"],"version":3,"file":"index.bc6629b1.js.map"}