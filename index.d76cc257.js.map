{"mappings":"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","sources":["src/index.ts","src/telegram-wallpaper.ts"],"sourcesContent":["import { TelegramWallpaper } from './telegram-wallpaper'\n\nconst wallpaper = new TelegramWallpaper({\n  canvas: document.querySelector('canvas'),\n  animate: true,\n  scrollAnimate: true\n})\n\nconsole.log(wallpaper)\n","interface Positions {\n  x: number\n  y: number\n}\n\ninterface RgbColor {\n  r: number\n  g: number\n  b: number\n}\n\ninterface Options {\n  canvas: HTMLCanvasElement | null\n  animate?: boolean\n  scrollAnimate?: boolean\n}\n\nexport class TelegramWallpaper {\n  private _width = 50\n  private _height = 50\n  private _phase = 0\n  private _tail = 0\n  private _tails = 90\n  private _scrolltails = 50\n  private _ts = 0\n  private _fps = 15\n  private _frametime = 1000 / this._fps\n  private _scrollDelta = 0\n  private _scrollTicking = false\n  private _raf: ReturnType<typeof requestAnimationFrame> | null = null\n  private _interval: ReturnType<typeof setInterval> | null = null\n  private _hc: HTMLCanvasElement\n  private _hctx: CanvasRenderingContext2D\n  private _canvas: HTMLCanvasElement\n  private _ctx: CanvasRenderingContext2D\n  private _frames: ImageData[] = []\n  private _colors: RgbColor[] = []\n  private _curve = [\n    0, 0.25, 0.50, 0.75, 1, 1.5, 2, 2.5, 3, 3.5, 4, 5, 6, 7, 8, 9, 10, 11, 12,\n    13, 14, 15, 16, 17, 18, 18.3, 18.6, 18.9, 19.2, 19.5, 19.8, 20.1, 20.4, 20.7,\n    21.0, 21.3, 21.6, 21.9, 22.2, 22.5, 22.8, 23.1, 23.4, 23.7, 24.0, 24.3, 24.6,\n    24.9, 25.2, 25.5, 25.8, 26.1, 26.3, 26.4, 26.5, 26.6, 26.7, 26.8, 26.9, 27\n  ]\n  private _positions = [\n    { x: 0.80, y: 0.10 },\n    { x: 0.60, y: 0.20 },\n    { x: 0.35, y: 0.25 },\n    { x: 0.25, y: 0.60 },\n    { x: 0.20, y: 0.90 },\n    { x: 0.40, y: 0.80 },\n    { x: 0.65, y: 0.75 },\n    { x: 0.75, y: 0.40 }\n  ]\n  private _phases = this._positions.length\n\n  constructor({\n    canvas,\n    animate,\n    scrollAnimate\n  }: Options) {\n    if (canvas) {\n      this.init(canvas)\n\n      if (animate) {\n        this.animate(animate)\n      }\n\n      if (scrollAnimate) {\n        this.scrollAnimate(scrollAnimate)\n      }\n    }\n  }\n\n  private hexToRgb(hex: string): RgbColor | null {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : null\n  }\n\n  private getPositions(shift: number): Positions[] {\n    const positions = [...this._positions]\n    while (shift > 0) {\n      positions.push(positions.shift()!)\n      shift--\n    }\n\n    const result = []\n    for (let i = 0; i < positions.length; i += 2) {\n      result.push(positions[i])\n    }\n\n    return result\n  }\n\n  private curPosition(phase: number, tail: number): Positions[] {\n    tail %= this._tails\n    const pos = this.getPositions(phase % this._phases)\n\n    if (tail) {\n      const next_pos = this.getPositions(++phase % this._phases)\n      const d1x = (next_pos[0].x - pos[0].x) / this._tails\n      const d1y = (next_pos[0].y - pos[0].y) / this._tails\n      const d2x = (next_pos[1].x - pos[1].x) / this._tails\n      const d2y = (next_pos[1].y - pos[1].y) / this._tails\n      const d3x = (next_pos[2].x - pos[2].x) / this._tails\n      const d3y = (next_pos[2].y - pos[2].y) / this._tails\n      const d4x = (next_pos[3].x - pos[3].x) / this._tails\n      const d4y = (next_pos[3].y - pos[3].y) / this._tails\n\n      return [\n        {\n          x: pos[0].x + d1x * tail,\n          y: pos[0].y + d1y * tail\n        },\n        {\n          x: pos[1].x + d2x * tail,\n          y: pos[1].y + d2y * tail\n        },\n        {\n          x: pos[2].x + d3x * tail,\n          y: pos[2].y + d3y * tail\n        },\n        {\n          x: pos[3].x + d4x * tail,\n          y: pos[3].y + d4y * tail\n        }\n      ]\n    }\n\n    return pos\n  }\n\n  private changeTail(diff: number): void {\n    this._tail += diff\n\n    while (this._tail >= this._tails) {\n      this._tail -= this._tails\n      this._phase++\n\n      if (this._phase >= this._phases) {\n        this._phase -= this._phases\n      }\n    }\n\n    while (this._tail < 0) {\n      this._tail += this._tails\n      this._phase--\n\n      if (this._phase < 0) {\n        this._phase += this._phases\n      }\n    }\n  }\n\n  private onWheel(event: WheelEvent): void {\n    this._scrollDelta += event.deltaY\n\n    if (!this._scrollTicking) {\n      requestAnimationFrame(() => this.drawOnWheel())\n      this._scrollTicking = true\n    }\n  }\n\n  private drawOnWheel(): void {\n    let diff = this._scrollDelta / this._scrolltails\n    this._scrollDelta %= this._scrolltails\n\n    diff = diff > 0 ?\n      Math.floor(diff) :\n      Math.ceil(diff)\n\n    if (diff) {\n      this.changeTail(diff)\n      const curPos = this.curPosition(this._phase, this._tail)\n      this.drawGradient(curPos)\n    }\n\n    this._scrollTicking = false\n  }\n\n  private drawNextPositionAnimated(): void {\n    if (this._frames.length > 0) {\n      const id = this._frames.shift()!\n      this.drawImageData(id)\n    } else if (this._interval) {\n      clearInterval(this._interval)\n    }\n  }\n\n  private getGradientImageData(positions: Positions[]): ImageData {\n    const id = this._hctx.createImageData(this._width, this._height)\n    const pixels = id.data\n    let offset = 0\n\n    for (let y = 0; y < this._height; y++) {\n      const directPixelY = y / this._height\n      const centerDistanceY = directPixelY - 0.5\n      const centerDistanceY2 = centerDistanceY * centerDistanceY\n\n      for (let x = 0; x < this._width; x++) {\n        const directPixelX = x / this._width\n\n        const centerDistanceX = directPixelX - 0.5\n        const centerDistance = Math.sqrt(centerDistanceX * centerDistanceX + centerDistanceY2)\n\n        const swirlFactor = 0.35 * centerDistance\n        const theta = swirlFactor * swirlFactor * 0.8 * 8.0\n        const sinTheta = Math.sin(theta)\n        const cosTheta = Math.cos(theta)\n\n        const pixelX = Math.max(0.0, Math.min(1.0, 0.5 + centerDistanceX * cosTheta - centerDistanceY * sinTheta))\n        const pixelY = Math.max(0.0, Math.min(1.0, 0.5 + centerDistanceX * sinTheta + centerDistanceY * cosTheta))\n\n        let distanceSum = 0.0\n\n        let r = 0.0\n        let g = 0.0\n        let b = 0.0\n\n        for (let i = 0; i < this._colors.length; i++) {\n          const colorX = positions[i].x\n          const colorY = positions[i].y\n\n          const distanceX = pixelX - colorX\n          const distanceY = pixelY - colorY\n\n          let distance = Math.max(0.0, 0.9 - Math.sqrt(distanceX * distanceX + distanceY * distanceY))\n          distance = distance * distance * distance * distance\n          distanceSum += distance\n\n          r += distance * this._colors[i].r / 255\n          g += distance * this._colors[i].g / 255\n          b += distance * this._colors[i].b / 255\n        }\n\n        pixels[offset++] = r / distanceSum * 255.0\n        pixels[offset++] = g / distanceSum * 255.0\n        pixels[offset++] = b / distanceSum * 255.0\n        pixels[offset++] = 0xFF\n      }\n    }\n\n    return id\n  }\n\n  private drawImageData(id: ImageData): void {\n    this._hctx.putImageData(id, 0, 0)\n    this._ctx.drawImage(this._hc, 0, 0, 50, 50)\n  }\n\n  private drawGradient(pos: Positions[]): void {\n    this.drawImageData(this.getGradientImageData(pos))\n  }\n\n  private doAnimate(): void {\n    const now = +Date.now()\n\n    if (!document.hasFocus() || now - this._ts < this._frametime) {\n      this._raf = requestAnimationFrame(() => this.doAnimate())\n      return\n    }\n\n    this._ts = now\n    this.changeTail(1)\n\n    const cur_pos = this.curPosition(this._phase, this._tail)\n    this.drawGradient(cur_pos)\n\n    this._raf = requestAnimationFrame(() => this.doAnimate())\n  }\n\n  private init(canvas: HTMLCanvasElement): void {\n    let colors: string | string[] = (canvas.getAttribute('data-colors') || '')\n\n    if (colors) {\n      colors = colors.split(',')\n    }\n\n    for (let i = 0; i < colors.length; i++) {\n      const color = this.hexToRgb(colors[i])\n\n      if (color) {\n        this._colors.push(color)\n      }\n    }\n\n    if (!this._hc) {\n      this._hc = document.createElement('canvas')\n      this._hc.width = this._width\n      this._hc.height = this._height\n      this._hctx = this._hc.getContext('2d')!\n    }\n\n    this._canvas = canvas\n    this._ctx = this._canvas.getContext('2d')!\n    this.update()\n  }\n\n  update(): void {\n    const pos = this.curPosition(this._phase, this._tail)\n    this.drawGradient(pos)\n  }\n\n  toNextPosition(): void {\n    if (!this._interval) {\n      return\n    }\n\n    clearInterval(this._interval)\n    this._frames = []\n\n    const prev_pos = this.getPositions(this._phase % this._phases)\n    this._phase++\n    const pos = this.getPositions(this._phase % this._phases)\n\n    const h = 27\n    const d1x = (pos[0].x - prev_pos[0].x) / h\n    const d1y = (pos[0].y - prev_pos[0].y) / h\n    const d2x = (pos[1].x - prev_pos[1].x) / h\n    const d2y = (pos[1].y - prev_pos[1].y) / h\n    const d3x = (pos[2].x - prev_pos[2].x) / h\n    const d3y = (pos[2].y - prev_pos[2].y) / h\n    const d4x = (pos[3].x - prev_pos[3].x) / h\n    const d4y = (pos[3].y - prev_pos[3].y) / h\n\n    for (let frame = 0; frame < 60; frame++) {\n      const cur_pos: Positions[] = [\n        {\n          x: prev_pos[0].x + d1x * this._curve[frame],\n          y: prev_pos[0].y + d1y * this._curve[frame]\n        },\n        {\n          x: prev_pos[1].x + d2x * this._curve[frame],\n          y: prev_pos[1].y + d2y * this._curve[frame]\n        },\n        {\n          x: prev_pos[2].x + d3x * this._curve[frame],\n          y: prev_pos[2].y + d3y * this._curve[frame]\n        },\n        {\n          x: prev_pos[3].x + d4x * this._curve[frame],\n          y: prev_pos[3].y + d4y * this._curve[frame]\n        }\n      ]\n\n      this._frames.push(this.getGradientImageData(cur_pos))\n    }\n\n    this._interval = setInterval(() => {\n      this.drawNextPositionAnimated()\n    }, 1000 / 30)\n  }\n\n  animate(start: boolean): void {\n    if (!start && this._raf) {\n      return cancelAnimationFrame(this._raf)\n    }\n\n    this.doAnimate()\n  }\n\n  scrollAnimate(start: boolean): void {\n    if (start) {\n      document.onwheel = (event) => this.onWheel(event)\n    } else {\n      document.onwheel = null\n    }\n  }\n}\n"],"names":["$b4e14b6b8da86996$var$wallpaper","canvas","animate","scrollAnimate","this","_width","_height","_phase","_tail","_tails","_scrolltails","_ts","_fps","_frametime","_scrollDelta","_scrollTicking","_raf","_interval","_frames","_colors","_curve","_positions","x","y","_phases","length","init","hexToRgb","hex","result","exec","r","parseInt","g","b","getPositions","shift","positions","push","i","curPosition","phase","tail","pos","next_pos","d1x","d1y","d2x","d2y","d3x","d3y","d4x","d4y","changeTail","diff","onWheel","event","deltaY","requestAnimationFrame","drawOnWheel","Math","floor","ceil","curPos","drawGradient","drawNextPositionAnimated","id","drawImageData","clearInterval","getGradientImageData","_hctx","createImageData","pixels","data","offset","centerDistanceY","centerDistanceY2","centerDistanceX","swirlFactor","sqrt","theta","sinTheta","sin","cosTheta","cos","pixelX","max","min","pixelY","distanceSum","distanceX","distanceY","distance","putImageData","_ctx","drawImage","_hc","doAnimate","now","Date","document","hasFocus","cur_pos","colors","getAttribute","split","color","createElement","width","height","getContext","_canvas","update","toNextPosition","prev_pos","h","frame","setInterval","start","cancelAnimationFrame","onwheel","querySelector","console","log"],"version":3,"file":"index.d76cc257.js.map"}