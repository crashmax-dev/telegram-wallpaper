const t=new class{constructor({canvas:t,animate:s,scrollAnimate:i}){this._width=50,this._height=50,this._phase=0,this._tail=0,this._tails=90,this._scrolltails=50,this._ts=0,this._fps=15,this._frametime=1e3/this._fps,this._scrollDelta=0,this._scrollTicking=!1,this._raf=null,this._interval=null,this._frames=[],this._colors=[],this._curve=[0,.25,.5,.75,1,1.5,2,2.5,3,3.5,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,18.3,18.6,18.9,19.2,19.5,19.8,20.1,20.4,20.7,21,21.3,21.6,21.9,22.2,22.5,22.8,23.1,23.4,23.7,24,24.3,24.6,24.9,25.2,25.5,25.8,26.1,26.3,26.4,26.5,26.6,26.7,26.8,26.9,27],this._positions=[{x:.8,y:.1},{x:.6,y:.2},{x:.35,y:.25},{x:.25,y:.6},{x:.2,y:.9},{x:.4,y:.8},{x:.65,y:.75},{x:.75,y:.4}],this._phases=this._positions.length,t&&(this.init(t),s&&this.animate(s),i&&this.scrollAnimate(i))}hexToRgb(t){const s=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);return s?{r:parseInt(s[1],16),g:parseInt(s[2],16),b:parseInt(s[3],16)}:null}getPositions(t){const s=[...this._positions];for(;t>0;)s.push(s.shift()),t--;const i=[];for(let t=0;t<s.length;t+=2)i.push(s[t]);return i}curPosition(t,s){s%=this._tails;const i=this.getPositions(t%this._phases);if(s){const h=this.getPositions(++t%this._phases),a=(h[0].x-i[0].x)/this._tails,e=(h[0].y-i[0].y)/this._tails,n=(h[1].x-i[1].x)/this._tails,r=(h[1].y-i[1].y)/this._tails,l=(h[2].x-i[2].x)/this._tails,o=(h[2].y-i[2].y)/this._tails,_=(h[3].x-i[3].x)/this._tails,c=(h[3].y-i[3].y)/this._tails;return[{x:i[0].x+a*s,y:i[0].y+e*s},{x:i[1].x+n*s,y:i[1].y+r*s},{x:i[2].x+l*s,y:i[2].y+o*s},{x:i[3].x+_*s,y:i[3].y+c*s}]}return i}changeTail(t){for(this._tail+=t;this._tail>=this._tails;)this._tail-=this._tails,this._phase++,this._phase>=this._phases&&(this._phase-=this._phases);for(;this._tail<0;)this._tail+=this._tails,this._phase--,this._phase<0&&(this._phase+=this._phases)}onWheel(t){this._scrollDelta+=t.deltaY,this._scrollTicking||(requestAnimationFrame((()=>this.drawOnWheel())),this._scrollTicking=!0)}drawOnWheel(){let t=this._scrollDelta/this._scrolltails;if(this._scrollDelta%=this._scrolltails,t=t>0?Math.floor(t):Math.ceil(t),t){this.changeTail(t);const s=this.curPosition(this._phase,this._tail);this.drawGradient(s)}this._scrollTicking=!1}drawNextPositionAnimated(){if(this._frames.length>0){const t=this._frames.shift();this.drawImageData(t)}else this._interval&&clearInterval(this._interval)}getGradientImageData(t){const s=this._hctx.createImageData(this._width,this._height),i=s.data;let h=0;for(let s=0;s<this._height;s++){const a=s/this._height-.5,e=a*a;for(let s=0;s<this._width;s++){const n=s/this._width-.5,r=.35*Math.sqrt(n*n+e),l=r*r*6.4,o=Math.sin(l),_=Math.cos(l),c=Math.max(0,Math.min(1,.5+n*_-a*o)),x=Math.max(0,Math.min(1,.5+n*o+a*_));let m=0,d=0,g=0,u=0;for(let s=0;s<this._colors.length;s++){const i=c-t[s].x,h=x-t[s].y;let a=Math.max(0,.9-Math.sqrt(i*i+h*h));a*=a*a*a,m+=a,d+=a*this._colors[s].r/255,g+=a*this._colors[s].g/255,u+=a*this._colors[s].b/255}i[h++]=d/m*255,i[h++]=g/m*255,i[h++]=u/m*255,i[h++]=255}}return s}drawImageData(t){this._hctx.putImageData(t,0,0),this._ctx.drawImage(this._hc,0,0,50,50)}drawGradient(t){this.drawImageData(this.getGradientImageData(t))}doAnimate(){const t=+Date.now();if(!document.hasFocus()||t-this._ts<this._frametime)return void(this._raf=requestAnimationFrame((()=>this.doAnimate())));this._ts=t,this.changeTail(1);const s=this.curPosition(this._phase,this._tail);this.drawGradient(s),this._raf=requestAnimationFrame((()=>this.doAnimate()))}init(t){let s=t.getAttribute("data-colors")||"";s&&(s=s.split(","));for(let t=0;t<s.length;t++){const i=this.hexToRgb(s[t]);i&&this._colors.push(i)}this._hc||(this._hc=document.createElement("canvas"),this._hc.width=this._width,this._hc.height=this._height,this._hctx=this._hc.getContext("2d")),this._canvas=t,this._ctx=this._canvas.getContext("2d"),this.update()}update(){const t=this.curPosition(this._phase,this._tail);this.drawGradient(t)}toNextPosition(){if(!this._interval)return;clearInterval(this._interval),this._frames=[];const t=this.getPositions(this._phase%this._phases);this._phase++;const s=this.getPositions(this._phase%this._phases),i=27,h=(s[0].x-t[0].x)/i,a=(s[0].y-t[0].y)/i,e=(s[1].x-t[1].x)/i,n=(s[1].y-t[1].y)/i,r=(s[2].x-t[2].x)/i,l=(s[2].y-t[2].y)/i,o=(s[3].x-t[3].x)/i,_=(s[3].y-t[3].y)/i;for(let s=0;s<60;s++){const i=[{x:t[0].x+h*this._curve[s],y:t[0].y+a*this._curve[s]},{x:t[1].x+e*this._curve[s],y:t[1].y+n*this._curve[s]},{x:t[2].x+r*this._curve[s],y:t[2].y+l*this._curve[s]},{x:t[3].x+o*this._curve[s],y:t[3].y+_*this._curve[s]}];this._frames.push(this.getGradientImageData(i))}this._interval=setInterval((()=>{this.drawNextPositionAnimated()}),1e3/30)}animate(t){if(!t&&this._raf)return cancelAnimationFrame(this._raf);this.doAnimate()}scrollAnimate(t){document.onwheel=t?t=>this.onWheel(t):null}}({canvas:document.querySelector("canvas"),animate:!0,scrollAnimate:!0});console.log(t);
//# sourceMappingURL=index.d76cc257.js.map
